## R {#sec-2_8}
如果我们要计算 $x_1,...,x_n$ 的样本均值和样本方差，我们可以在 R 中输入：

```{.r}
x <- c(x_1,...,x_n)
```

然后可以按下 `回车` 键，并输入 `mean(x)`，然后当再次按下 `回车` 时，就会打印出样本均值。当输入 `var(x)`，然后按下 `回车` 时，就会打印出样本方差。

例如，我们要计算：4，6，12，9，21，14 的样本均值和样本方差，我们可以用 R 按照如下方式获取：

```{.r}
> x <- c(4,6,12,9,21,14)
> mean(x)
[1] 11
> var(x)
[1] 37.6
> 
```

在 R 中，我们不需要输入行首的 `>`，R 会自动为每一行补充提示符 `>`，以提示我们输入代码。R 中的命令还有：

* `sum(x)`：返回向量 `x` 中所有数据的和。
* `median(x)`：返回向量 `x` 中的所有数据的中位数。
* `sd(x)`：返回向量 `x` 中所有数据的标准差。

如果 $x=c(x_1,...,x_n)$，$y=c(y_1,...,y_n)$，则：

* $x+y=c(x_1+y_1,...,x_n+y_n)$
* $x-y=c(x_1-y_1,...,x_n-y_n)$
* $x^2=c(x_1^2,...,x_n^2)$
* $\frac{x}{y}=c(\frac{x_1}{y_1},...,\frac{x_n}{y_n}), \ \forall y_i \ne 0$

如果 $a$ 是一个实数，则：

* $a + x = c(a+x_1,...,a+x_n)$
* $ax = c(ax_1,...,ax_n)$
* $\frac{x}{a}=c(\frac{x_1}{a},...,\frac{x_n}{a}), \ \forall a \ne 0$
* $\frac{a}{x}=c(\frac{a}{x_1},...,\frac{a}{x_n}), \ \forall x_i \ne 0$

对于成对数据 $\{(x_i,y_i)\}, \ i=1,...,n$，我们可以使用如下命令获取其相关系数：

```{.r}
> x <- c(x1,...,xn) 
> y <- c(y1,...,yn) 
> cor(x, y)
```

可以用 `plot(x, y)` 获取 $\{(x_i,y_i)\}$ 的散点图：

```{.r}
> plot(x, y)
```

假设我们有如下的数据：`(4,10), (6,13), (12,22), (9,15), (21,30), (14,15)`，我们可以使用如下的 R 命令获取其样本相关系数和散点图：

```{r}
x <- c(4, 6, 12, 9, 21, 14)
y <- c(10, 13, 22, 15, 30, 15) 
cor(x, y)
plot(x, y)
```

R 还可以用于数学计算，例如我们可以使用如下命令计算 $\frac{18\sqrt{177}}{677}$：

```{r}
18*sqrt(177)/677 
```

* 如果我们从向量 `x <- c(x1, ..., xn)` 中选择第 $i$ 个位置的元素 $x_i$，我们可以使用命令 `x[i]`。
* 如果希望从向量 `x` 中选择 $i$ 到 $j$ 的元素并构成一个新的向量，我们可以使用命令 `x[i:j]`。

```{r}
x <- c(3, 18, 9, 7, 22, 5, 17)
x[3]
x[2:5]
```

我们可以使用 R 计算基尼系数。对于向量 `x <- c(x1, ..., xn)`，先利用 `sort(x)` 得到 关于向量 `x` 中数据的递增排序。

```{r}
x <- c(9, 7, 22, 5, 17)
sort(x)
```

如果我们想使用 @eq-2_7_001 和 @eq-2_7_002 来计算 @exr-2_7_b 中的基尼系数，我们可以使用如下的代码：

```{r}
y <- c(9, 7, 22, 5, 17)
x <- sort(y)
s <- cumsum(x)[1:4]
B <- 1/10 + sum(s) / (5 * sum(x))
G <- 1 - 2 * B
G 
```

我们也可以在 R 中定义 `函数`。例如，我们想在 R 中定义函数 $f$ 以实现 $f(x) = x^2$，可以使用如下的代码：

```{r}
f = function(x){x * x}
f(4)
```

如果我们想实现 $f(x) = e^x$，可以使用如下的代码：

```{r}
f = function(x){exp(x)}
f(1)
```

使用 `函数` 的概念，我们可以使用如下的代码以获取 `9, 7, 22, 5, 17` 的基尼系数：

```{r}
s = function(x, j){sum(x[1:j])}

y <- c(9, 7, 22, 5, 17)
x <- sort(y)
B <- 1/10 + (s(x, 1) + s(x, 2) + s(x, 3) + s(x, 4)) / (5 * s(x, 5))
G <- 1 - 2 * B
G 
```